{"ast":null,"code":"var _jsxFileName = \"/home/adoilson/\\xC1rea de Trabalho/Cursos/Projetos/mydailstatus/pages/app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router from 'next/router';\nimport { IoMdLogOut } from 'react-icons/io';\nimport GoogleMapReact from 'google-map-react';\nimport auth0 from '../lib/auth0';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst AnyReactComponent = ({\n  text\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 41\n  }\n}, text);\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-2 mb-4 flex flex-row-reverse items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: props.user.picture,\n    className: \"mx-2 w-10 rounded-full\",\n    alt: \"perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), __jsx(\"h3\", {\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, props.user.name), __jsx(\"a\", {\n    href: \"/api/logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(IoMdLogOut, {\n    color: \"red\",\n    size: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA:\"), props.checkins.map(checkin => {\n    return __jsx(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, __jsx(GoogleMapReact, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, __jsx(AnyReactComponent, {\n      lat: checkin.coords.lat,\n      lng: checkin.coords.long,\n      text: checkin.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    })))\n    /*  <tr>\n        <td>{checkin.id === props.user.sub && 'Seus status'}</td>\n        <td>{checkin.status}</td>\n        <td>{JSON.stringify(checkin.coords)}</td>\n        <td>{checkin.distance}km</td>\n      </tr> */\n    ;\n  }));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\n    const todayCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todayCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 20000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["/home/adoilson/Área de Trabalho/Cursos/Projetos/mydailstatus/pages/app.js"],"names":["React","useEffect","router","IoMdLogOut","GoogleMapReact","auth0","db","distance","AnyReactComponent","text","App","props","isAuth","push","forceCreate","user","picture","name","checkins","map","checkin","height","width","coords","lat","long","status","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todayCheckin","collection","doc","sub","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","id","latitude","longitude","toFixed"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport router from 'next/router';\nimport { IoMdLogOut } from 'react-icons/io';\nimport GoogleMapReact from 'google-map-react';\nimport auth0 from '../lib/auth0';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst App = (props) => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n  return (\n    <div>\n      <div className=\"mt-2 mb-4 flex flex-row-reverse items-center\">\n        <img\n          src={props.user.picture}\n          className=\"mx-2 w-10 rounded-full\"\n          alt=\"perfil\"\n        />\n        <h3 className=\"mr-1\">{props.user.name}</h3>\n        <a href=\"/api/logout\">\n          <IoMdLogOut color=\"red\" size={22} />\n        </a>\n      </div>\n      <h1>Status próximos a você:</h1>\n\n      {props.checkins.map((checkin) => {\n        return (\n          <div style={{ height: '100vh', width: '100%' }}>\n            <GoogleMapReact>\n              <AnyReactComponent\n                lat={checkin.coords.lat}\n                lng={checkin.coords.long}\n                text={checkin.status}\n              />\n            </GoogleMapReact>\n          </div>\n          /*  <tr>\n              <td>{checkin.id === props.user.sub && 'Seus status'}</td>\n              <td>{checkin.status}</td>\n              <td>{JSON.stringify(checkin.coords)}</td>\n              <td>{checkin.distance}km</td>\n            </tr> */\n        );\n      })}\n    </div>\n  );\n};\n\nexport default App;\n\nexport async function getServerSideProps({ req, res }) {\n  const session = await auth0.getSession(req);\n  if (session) {\n    const today = new Date();\n    const currentDate = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\n    const todayCheckin = await db\n      .collection('markers')\n      .doc(currentDate)\n      .collection('checks')\n      .doc(session.user.sub)\n      .get();\n\n    const todaysData = todayCheckin.data();\n    let forceCreate = true;\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db\n        .collection('markers')\n        .doc(currentDate)\n        .collection('checks')\n        .near({\n          center: todaysData.coordinates,\n          radius: 20000,\n        })\n        .get();\n      const checkinsList = [];\n      checkins.docs.forEach((doc) => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude,\n          },\n          distance: distance(\n            todaysData.coordinates.latitude,\n            todaysData.coordinates.longitude,\n            doc.data().coordinates.latitude,\n            doc.data().coordinates.longitude\n          ).toFixed(2),\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList,\n        },\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate,\n      },\n    };\n  }\n  return {\n    props: {\n      isAuth: false,\n      user: {},\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}